import numpy as np

# C60 vertices in Cartesian coordinates (Angstroms)
# From standard fullerene geometry with Ih symmetry
C60_VERTICES = np.array([
    [ 0.000,  0.000,  3.559], [ 0.000,  0.000, -3.559],  # top/bottom
    [ 3.353,  0.000,  1.189], [ 3.353,  0.000, -1.189],
    [-3.353,  0.000,  1.189], [-3.353,  0.000, -1.189],
    [ 1.037,  3.188,  1.189], [ 1.037,  3.188, -1.189],
    [ 1.037, -3.188,  1.189], [ 1.037, -3.188, -1.189],
    [-1.037,  3.188,  1.189], [-1.037,  3.188, -1.189],
    [-1.037, -3.188,  1.189], [-1.037, -3.188, -1.189],
    [ 2.710,  1.969,  1.189], [ 2.710,  1.969, -1.189],
    [ 2.710, -1.969,  1.189], [ 2.710, -1.969, -1.189],
    [-2.710,  1.969,  1.189], [-2.710,  1.969, -1.189],
    [-2.710, -1.969,  1.189], [-2.710, -1.969, -1.189],
    [ 1.673,  1.219,  2.748], [ 1.673,  1.219, -2.748],
    [ 1.673, -1.219,  2.748], [ 1.673, -1.219, -2.748],
    [-1.673,  1.219,  2.748], [-1.673,  1.219, -2.748],
    [-1.673, -1.219,  2.748], [-1.673, -1.219, -2.748],
    [ 2.710,  0.750,  2.369], [ 2.710,  0.750, -2.369],
    [ 2.710, -0.750,  2.369], [ 2.710, -0.750, -2.369],
    [-2.710,  0.750,  2.369], [-2.710,  0.750, -2.369],
    [-2.710, -0.750,  2.369], [-2.710, -0.750, -2.369],
    [ 0.643,  2.438,  2.369], [ 0.643,  2.438, -2.369],
    [ 0.643, -2.438,  2.369], [ 0.643, -2.438, -2.369],
    [-0.643,  2.438,  2.369], [-0.643,  2.438, -2.369],
    [-0.643, -2.438,  2.369], [-0.643, -2.438, -2.369],
    [ 2.067,  2.938,  0.000], [ 2.067, -2.938,  0.000],
    [-2.067,  2.938,  0.000], [-2.067, -2.938,  0.000],
    [ 3.353,  0.000,  0.000], [-3.353,  0.000,  0.000],
    [ 1.037,  1.219,  3.180], [ 1.037,  1.219, -3.180],
    [ 1.037, -1.219,  3.180], [ 1.037, -1.219, -3.180],
    [-1.037,  1.219,  3.180], [-1.037,  1.219, -3.180],
    [-1.037, -1.219,  3.180], [-1.037, -1.219, -3.180],
    [ 0.000,  2.438,  0.000], [ 0.000, -2.438,  0.000]
])

print(f"C60 vertices: {len(C60_VERTICES)} points")
print(f"Symmetry check: max radius = {np.max(np.linalg.norm(C60_VERTICES, axis=1)):.3f} Ã…")